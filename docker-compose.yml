version: "3"
services:
  ocpu:
    restart: on-failure
    image: mlgrm/rstudio
    build: ocpu/
    container_name: rserver
    labels:
      traefik.enable: 'true'
      traefik.frontend.rule: "Host:$RSERVER_DOMAIN_NAME"
      traefik.port: '8004'
      traefik.port: '80'
      traefik.docker.network: "proxynet"
      traefik.frontend.entryPoints: "http,https"
    ports:
      - "8004"
      - "80" 
    hostname: ocpu
    #command: apachectl -DFOREGROUND
    networks:
      - webservices
    volumes:
      - ./rstudio.conf:/etc/apache2/sites-enabled/rstudio.conf
    environment:
      POSTGRES_PASSWORD: "$POSTGRES_PASSWORD"

  superset:
    container_name: superset
    image: amancevice/superset
    # image: mlgrm/dms-superset
    restart: always
    labels:
      traefik.enable: 'true'
      traefik.frontend.rule: "Host:$SUPERSET_DOMAIN_NAME"
      traefik.port: '8088'
      traefik.docker.network: "proxynet"
      traefik.frontend.entryPoints: "http,https"
    ports:
      - "8088"
    volumes: # these need to be owned by uid 1000
      - ./superset_config.py:/etc/superset/superset_config.py
      - ./data/superset_lib:/var/lib/superset/
    networks:
      - webservices
    environment:
      MAPBOX_API_KEY: "$MAPBOX_API_KEY"
      POSTGRES_PASSWORD: "$POSTGRES_PASSWORD"
      SUPERSET_SECRET_KEY: ${SUPERSET_SECRET_KEY}
      GOOGLE_AUTH_WHITELIST: ${GOOGLE_AUTH_WHITELIST}
      GOOGLE_AUTH_KEY: ${GOOGLE_AUTH_KEY}
      GOOGLE_AUTH_SECRET: ${GOOGLE_AUTH_SECRET}
    depends_on:
      - redis
      - postgres
      - traefik

  redis:
    image: redis
    restart: always
    ports:
      - "6379"
    volumes:
      - redis:/data
    networks:
      - default
      - webservices
  
  postgres:
    container_name: postgres
    image: library/postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "$POSTGRES_DB"
      POSTGRES_PASSWORD: "$POSTGRES_PASSWORD"
      POSTGRES_USER: "$POSTGRES_USER"
    volumes:
      - ./data/postgresql-data:/var/lib/postgresql/data/
    networks:
      - webservices

  pgadmin:
    container_name: pgadmin
    image: chorss/docker-pgadmin4
    ports:
      - "5050:5050"
    labels:
      traefik.enable: 'true'
      traefik.frontend.rule: "Host:$PGADMIN_DOMAIN_NAME"
      traefik.port: '5050'
      traefik.docker.network: "proxynet"
      traefik.frontend.entryPoints: "http,https"
    environment:
      UID: 1000
      GID: 1000
    volumes:
      - ./data/pgadmin-data:/data/chorss/docker-pgadmin4
    networks:
      - webservices

  traefik:
    container_name: traefik
    image: traefik:1.6-alpine
    restart: on-failure
    container_name: traefik
    hostname: traefik
    networks:
      - default
      - webservices
    ports:
      - "8080:8080"
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/traefik.toml
      - ./acme:/etc/traefik/acme
      - ./traefic.log:/log
    command:
      - "--docker.domain=$TRAEFIK_DOMAIN"
      - "--acme.email=$ACME_EMAIL"
      - "--entrypoints=Auth.Basic.Users:admin:$TRAEFIK_PASSWORD"

networks:
  webservices:
    external: false
    
volumes:
#  postgres:
#  pgadmin:
#  superset:
  redis:
    external: false
